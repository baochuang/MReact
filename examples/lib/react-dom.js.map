{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./version-one/constants/index.js","webpack:///./version-one/constants/nodeTypes.js","webpack:///./version-one/react-dom/DOMNamespaces.js","webpack:///./version-one/react-dom/DOMProperty.js","webpack:///./version-one/react-dom/DOMPropertyOperations.js","webpack:///./version-one/react-dom/ReactDOMComponent.js","webpack:///./version-one/react-dom/ReactDOMContainerInfo.js","webpack:///./version-one/react-dom/ReactDOMEmptyComponent.js","webpack:///./version-one/react-dom/ReactDOMTextComponent.js","webpack:///./version-one/react-dom/TopLevelWrapper.js","webpack:///./version-one/react-dom/client/ReactDOM.js","webpack:///./version-one/react-dom/client/ReactDOMComponentTree.js","webpack:///./version-one/react-dom/client/ReactMount.js","webpack:///./version-one/react-dom/client/utils/DOMLazyTree.js","webpack:///./version-one/react-dom/client/utils/setTextContent.js","webpack:///./version-one/react-reconciler/ReactCompositeComponent.js","webpack:///./version-one/react-reconciler/ReactEmptyComponent.js","webpack:///./version-one/react-reconciler/ReactInstanceMap.js","webpack:///./version-one/react-reconciler/ReactMultiChild.js","webpack:///./version-one/react-reconciler/ReactNativeComponent.js","webpack:///./version-one/react-reconciler/ReactReconciler.js","webpack:///./version-one/react-reconciler/StatelessComponent.js","webpack:///./version-one/react-reconciler/instantiateReactComponent.js","webpack:///./version-one/react/ReactElement.js"],"names":[],"mappings":"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A;;AAEA,+BAA+B,mEAAY;AAC3C,QAAQ,wDAAe;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAW;AACvB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,8BAA8B,2FAAyB;;AAEvD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yEAAe;AAClC;AACA,SAAS,wBAAwB;AACjC;AACA,QAAQ,sEAAqB;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAW;AACnB,KAAK;AACL;AACA;AACA,C;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAA+C;AAC0B;AAC5B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,qDAAU;AAChB;AACA,GAAG;AACH,IAAI,+DAAc;AAClB;AACA;;AAEA;AACA,6BAA6B,+EAA0B;AACvD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,OAAO,qDAAU;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,MAAM,+DAAc;AACpB;AACA;;AAEA;AACA,MAAM,qDAAU;AAChB;AACA,GAAG;AACH;AACA;AACA;;AAEe,0E;;;;;;;;;;;;ACxDf;AAAA;AACA;AACA;;AAEe,6E;;;;;;;;;;;;ACJf;AAAA;AAAA;AAAA;AAAA;AAAqD;AACJ;AACF;;AAEhC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,2DAAkB;AAC7C;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,yDAAgB;;AAExB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,K;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,wDAAe;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,2DAAkB;AAC9C;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACxKA;AAAA;AAAwE;;AAExE;AACA;AACA,mBAAmB,yEAAsB;AACzC;AACA;;AAEe,kF;;;;;;;;;;;;ACRf;AAAA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,+E;;;;;;;;;;;;ACTf;AAAA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;AAEe,8E;;;;;;;;;;;;ACTf;AAAA;AAAA;AAAA;AAA8D;AACQ;;AAEtE;AACA,eAAe,oEAAiB;AAChC;;AAEA;AACA,eAAe,uEAAqB;AACpC;;AAEA;AACA;AACA;AACA;;AAEe,mF;;;;;;;;;;;;AChBf;AAAA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,8E;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAiD;;AAElC;AACf;;AAEA;;AAEA;AACA,wBAAwB,yDAAgB;AACxC;AACA;AACA;AACA,C;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAuD;AACE;AACM;;AAE/D,6CAA6C,gEAAuB;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4DAAmB;AACtC,KAAK;AACL;;AAEA;AACA,uBAAuB,6DAAoB;AAC3C,SAAS;AACT;AACA;AACA,KAAK;AACL,mBAAmB,6DAAoB;AACvC,K;;AAEA;AACA;;AAEe,wF;;;;;;;;;;;;ACjCf;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,K;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2E","file":"react-dom.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./version-one/react-dom/client/ReactDOM.js\");\n","export const enableLazy = !!(\r\n    typeof document !== undefined &&\r\n    typeof document.documentMode === 'number' ||\r\n    typeof navigator !== 'undefined' &&\r\n    typeof navigator.userAgent === 'string' &&\r\n    /\\bEdge\\/\\d/.test(navigator.userAgent)\r\n)\r\n\r\nexport const emptyObject = {}","export const ELEMENT_NODE_TYPE = 1 // 元素\r\nexport const ATTR_NODE_TYPE = 2 // 属性\r\nexport const TEXT_NODE_TYPE = 3 // 元素或属性中的文本内容\r\nexport const CDATASECTION_NODE_TYPE = 4 // 不会被解释的部分\r\nexport const ENTITYREFERENCE_NODE_TYPE = 5 // 实体引用\r\nexport const ENTITY_NODE_TYPE = 6 // 实体\r\nexport const PROCESSINGINSTRUCTION_NODE_TYPE = 7 // 代表处理指令\r\nexport const COMMENT_NODE_TYPE = 8  // 注释\r\nexport const DOC_NODE_TYPE = 9 // 代表整个文档\r\nexport const DOCUMENTFRAGMENT_NODE_TYPE = 11 // 轻量级的文档处理对象","const DOMNamespaces = {\r\n    html: 'http://www.w3.org/1999/xhtml',\r\n    mathml: 'http://www.w3.org/1998/Math/MathML',\r\n    svg: 'http://www.w3.org/2000/svg',\r\n}\r\n\r\nexport default DOMNamespaces","const DOMProperty = {\r\n    ROOT_ATTRIBUTE_NAME: 'data-reactroot'\r\n}\r\n\r\nexport default DOMProperty","import DOMProperty from './DOMProperty'\r\n\r\nconst DOMPropertyOperations = {\r\n    setAttributeForRoot: function(node) {\r\n        node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '')\r\n    }\r\n}\r\n\r\nexport default DOMPropertyOperations","import ReactMultiChild from '../react-reconciler/ReactMultiChild'\r\nimport DOMNamespaces from './DOMNamespaces'\r\nimport DOMPropertyOperations from './DOMPropertyOperations'\r\nimport DOMLazyTree from './client/utils/DOMLazyTree'\r\n\r\nimport { getNodeFromInstance } from './client/ReactDOMComponentTree'\r\n\r\nconst CONTENT_TYPES = {'string': true, 'number': true}\r\n\r\nclass ReactDOMComponent {\r\n    constructor(element) {\r\n        const tag = element.type\r\n        // for diff\r\n        this._domID = null\r\n\r\n        this._currentElement = element\r\n        this._tag = tag.toLowerCase()\r\n        this._namespaceURI = null\r\n    }\r\n\r\n    mountComponent(\r\n        transaction = { useCreateElement: true},\r\n        nativeParent,\r\n        nativeContainerInfo,\r\n        context\r\n    ) {\r\n        this._domID = nativeContainerInfo._idCounter++\r\n        this._nativeParent = nativeParent\r\n        this._nativeContainerInfo = nativeContainerInfo\r\n\r\n        const props = this._currentElement.props\r\n\r\n        // namespace 还没去研究干啥的\r\n        let namespaceURI\r\n        let parentTag\r\n\r\n        if (nativeParent) {\r\n            namespaceURI = nativeParent._namespaceURI\r\n            parentTag = nativeParent._tag\r\n        } else if (nativeContainerInfo._tag) {\r\n            namespaceURI = nativeContainerInfo._namespaceURI\r\n            parentTag = nativeContainerInfo._tag\r\n        }\r\n\r\n        if (namespaceURI == null ||\r\n            namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\r\n                namespaceURI = DOMNamespaces.html\r\n        }\r\n\r\n        if (namespaceURI === DOMNamespaces.html) {\r\n            if (this._tag === 'svg') {\r\n              namespaceURI = DOMNamespaces.svg;\r\n            } else if (this._tag === 'math') {\r\n              namespaceURI = DOMNamespaces.mathml;\r\n            }\r\n        }\r\n\r\n        this._namespaceURI = namespaceURI\r\n\r\n        let mountImage\r\n\r\n        // 创建\r\n        if (transaction && transaction.useCreateElement || true) {\r\n            const ownerDocument = nativeContainerInfo._ownerDocument\r\n            let el \r\n\r\n            if (namespaceURI === DOMNamespaces.html) {\r\n                if (this._tag === 'script') {\r\n                \r\n                } else {\r\n                    el = ownerDocument.createElement(this._currentElement.type)\r\n                } \r\n            } else {\r\n                el = ownerDocument.createElementNS(\r\n                    namespaceURI,\r\n                    this._currentElement.type\r\n                )\r\n            }\r\n\r\n            if (!this._nativeParent) {\r\n                DOMPropertyOperations.setAttributeForRoot(el);\r\n            }\r\n\r\n            this._updateDOMProperties(null, props, transaction)\r\n\r\n            const lazyTree = DOMLazyTree(el)\r\n\r\n            this._createInitialChildren(transaction, props, context, lazyTree)\r\n\r\n            mountImage = lazyTree\r\n        } else { // 更新\r\n\r\n        }\r\n\r\n        return mountImage\r\n    }\r\n\r\n    _updateDOMProperties(lastProps, nextProps, transaction) {\r\n        //\r\n    }\r\n\r\n    _createInitialChildren(transaction, props, context, lazyTree) {\r\n        const innerHTML = props.dangerouslySetInnerHTML\r\n\r\n        if (innerHTML) {\r\n\r\n        } else {\r\n            const contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null\r\n            const childrenToUse = contentToUse != null ? null : props.children\r\n\r\n            if (contentToUse != null) {\r\n                // 将文本绑定到节点上去\r\n                DOMLazyTree.queueText(lazyTree, contentToUse);\r\n              } else if (childrenToUse != null) {\r\n                // 还不知道干啥\r\n                const mountImages = this.mountChildren(\r\n                  childrenToUse,\r\n                  transaction,\r\n                  context\r\n                )\r\n                for (var i = 0; i < mountImages.length; i++) {\r\n                  DOMLazyTree.queueChild(lazyTree, mountImages[i]);\r\n                }\r\n              }\r\n        }\r\n    }\r\n\r\n    getPublicInstance() {\r\n        return getNodeFromInstance(this)\r\n    }\r\n}\r\n\r\nReactDOMComponent.displayName = 'ReactDOMComponent'\r\n\r\nObject.assign(\r\n    ReactDOMComponent.prototype,\r\n    ReactMultiChild\r\n)\r\n\r\nexport default ReactDOMComponent","import { DOC_NODE_TYPE } from '../constants/nodeTypes'\r\n\r\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\r\n    const info = {\r\n        _topLevelWrapper: topLevelWrapper,\r\n        _ownerDocument: node ?\r\n            node.nodeType === DOC_NODE_TYPE ?   \r\n                node : node.ownerDocument :\r\n                    null\r\n    }\r\n    return info\r\n}\r\n\r\nexport default ReactDOMContainerInfo","export default class ReactDOMEmptyComponent {\r\n    constructor(instantiate) {\r\n        // ReactCompositeComponent uses this:\r\n        this._currentElement = null\r\n        // ReactDOMComponentTree uses these:\r\n        this._nativeNode = null\r\n        this._nativeParent = null\r\n        this._nativeContainerInfo = null\r\n        this._domID = null\r\n    }\r\n\r\n    mountComponent(\r\n        transaction,\r\n        nativeParent,\r\n        nativeContainerInfo,\r\n        context\r\n    ) {\r\n\r\n    }\r\n\r\n    receiveComponent() {\r\n        \r\n    }\r\n}","\r\nclass ReactDOMTextComponent {\r\n    constructor(text) {\r\n        this._currentElement = text\r\n\r\n        this._nativeNode = null\r\n        this._nativeParent = null\r\n\r\n        this._domID = null\r\n    }\r\n\r\n    mountComponent(\r\n        transaction,\r\n        nativeParent,\r\n        nativeContainerInfo,\r\n        context\r\n    ) {\r\n\r\n    }\r\n\r\n    receiveComponent(nextText, transaction) {\r\n    \r\n    }\r\n}","let topLevelRootCounter = 1\r\n\r\nconst TopLevelWrapper = function() {\r\n    this.rootID = topLevelRootCounter++\r\n}\r\n\r\nTopLevelWrapper.prototype.isReactComponent = {}\r\n\r\nTopLevelWrapper.prototype.render = function() {\r\n    console.log(this)\r\n    return this.props\r\n}\r\n\r\nexport default TopLevelWrapper","import { render } from './ReactMount'\r\n\r\nconst ReactDOM = {\r\n    render\r\n}\r\n\r\nwindow.ReactDOM = ReactDOM","\r\nexport const getNodeFromInstance = (inst) => {\r\n    if (inst._nativeNode) {\r\n        return inst._nativeNode\r\n    }\r\n\r\n    let parents = []\r\n\r\n    while (!inst._nativeNode) {\r\n        parents.push(inst)\r\n\r\n        inst = inst._nativeParent\r\n    }\r\n\r\n    return inst._nativeNode\r\n}","import ReactElement from '../../react/ReactElement'\r\nimport TopLevelWrapper from '../TopLevelWrapper'\r\nimport { emptyObject } from '../../constants'\r\nimport instantiateReactComponent from '../../react-reconciler/instantiateReactComponent'\r\nimport ReactReconciler from '../../react-reconciler/ReactReconciler'\r\nimport ReactDOMContainerInfo from '../ReactDOMContainerInfo'\r\nimport DOMLazyTree from './utils/DOMLazyTree'\r\n\r\nexport const render = function(nextElement, container, callback) {\r\n    return renderSubtreeIntoContainer(\r\n        null,\r\n        nextElement,\r\n        container,\r\n        callback,\r\n    )\r\n}\r\n\r\nconst renderSubtreeIntoContainer = function(parentComponent, nextElement, container, callback) {\r\n\r\n    const nextWrappedElement = ReactElement(\r\n        TopLevelWrapper,\r\n        null,\r\n        null,\r\n        null,\r\n        nextElement\r\n    )\r\n\r\n    const component = renderNewRootComponent(\r\n        nextWrappedElement,\r\n        container,\r\n        parentComponent ? parentComponent._reactInternalInstance._processChildContext(\r\n            parentComponent._reactInternalInstance._context\r\n        ) : emptyObject \r\n    )._renderedComponent.getPublicInstance()\r\n\r\n    if (callback) {\r\n\r\n    }\r\n\r\n    return component\r\n}\r\n\r\nconst renderNewRootComponent = function(nextElement, container, context) {\r\n    const componentInstance = instantiateReactComponent(nextElement)\r\n\r\n    mountComponentIntoNode(componentInstance, container, context)\r\n\r\n    return componentInstance\r\n}\r\n\r\nconst mountComponentIntoNode = function(\r\n    wrapperInstance,\r\n    container,\r\n    context\r\n) {\r\n    const markup = ReactReconciler.mountComponent(\r\n        wrapperInstance,\r\n        { useCreateElement: true},\r\n        null,\r\n        ReactDOMContainerInfo(wrapperInstance, container),\r\n        context\r\n    )\r\n\r\n    wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance\r\n\r\n    mountImageIntoNode(\r\n        markup,\r\n        container,\r\n        wrapperInstance\r\n    )\r\n}\r\n\r\nconst mountImageIntoNode = function(\r\n    markup,\r\n    container,\r\n    wrapperInstance,\r\n    transaction = { useCreateElement : true}\r\n){\r\n    if (transaction.useCreateElement) {\r\n        while (container.lastChild) {\r\n            container.removeChild(container.lastChild)\r\n        }\r\n        DOMLazyTree.insertTreeBefore(container, markup, null)\r\n    } else {\r\n        setInnerHTML(container, markup)\r\n    }\r\n}","import { enableLazy } from '../../../constants'\r\nimport { DOCUMENTFRAGMENT_NODE_TYPE } from '../../../constants/nodeTypes'\r\nimport setTextContent from './setTextContent'\r\n\r\nfunction DOMLazyTree(node) {\r\n    return {\r\n      node: node,\r\n      children: [],\r\n      html: null,\r\n      text: null,\r\n    }\r\n}\r\n\r\nDOMLazyTree.queueText = function(tree, text) {\r\n  if (enableLazy) {\r\n    tree.text = text;\r\n  } else {\r\n    setTextContent(tree.node, text);\r\n  }\r\n}\r\n\r\nDOMLazyTree.insertTreeBefore = function(parentNode, tree, referenceNode) {\r\n  if (tree.node.nodeType === DOCUMENTFRAGMENT_NODE_TYPE) {\r\n      insertTreeChildren(tree)\r\n      parentNode.insertBefore(tree.node, referenceNode)\r\n  } else {\r\n      parentNode.insertBefore(tree.node, referenceNode)\r\n      insertTreeChildren(tree)\r\n  }\r\n}\r\n\r\nfunction insertTreeChildren(tree) {\r\n  if (!enableLazy) {\r\n      return \r\n  }\r\n  const node = tree.node\r\n  const children = tree.children\r\n  if (children.length) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        DOMLazyTree.insertTreeBefore(node, children[i], null);\r\n      }\r\n  } else if (tree.html !== null) {\r\n      node.innerHTML = tree.html\r\n  } else if (tree.text !== null) {\r\n      setTextContent(node, tree.text)\r\n  }\r\n}\r\n\r\nDOMLazyTree.queueChild = function(parentTree, childTree) {\r\n  if (enableLazy) {\r\n    parentTree.children.push(childTree);\r\n  } else {\r\n    parentTree.node.appendChild(childTree.node);\r\n  }\r\n}\r\n\r\nexport default DOMLazyTree","const setTextContent = function(node, text) {\r\n    node.textContent = text\r\n}\r\n\r\nexport default setTextContent","import StatelessComponent from './StatelessComponent'\r\nimport ReactInstanceMap from './ReactInstanceMap'\r\nimport ReactReconciler from './ReactReconciler'\r\n\r\nexport default class ReactCompositeComponent {\r\n    constructor(element) {\r\n        this._currentElement = element\r\n        // for diff\r\n        this._rootNodeID = null\r\n        this._instance = null\r\n        // for update\r\n        this._renderedComponent = null\r\n        this._context = null\r\n        // for dom tree\r\n        this._nativeParent = null;\r\n        this._nativeContainerInfo = null\r\n    }\r\n\r\n    _processProps(newProps) {\r\n        return newProps\r\n    }\r\n\r\n    _processContext(context) {\r\n        return this._maskContext(context)\r\n    }\r\n    /**\r\n     * 绑定上下文\r\n     * @param {上下文} context \r\n     */\r\n    _maskContext(context) {\r\n        const Component = this._currentElement.type\r\n        const contextTypes = Component.contextTypes\r\n        if (contextTypes) {\r\n            const maskedContext = {}\r\n\r\n            for (let contextName in contextTypes) {\r\n                maskedContext[contextName] = context[contextName]\r\n            }\r\n\r\n            return maskedContext\r\n        }\r\n        return {}\r\n    }\r\n    /**\r\n     * 绑定组件\r\n     * @param {*} transaction \r\n     * @param {*} nativeParent \r\n     * @param {*} nativeContainerInfo \r\n     * @param {*} context \r\n     */\r\n    mountComponent(\r\n        transaction,\r\n        nativeParent,\r\n        nativeContainerInfo,\r\n        context\r\n    ) {\r\n        this.context = context\r\n        this._nativeParent = nativeParent\r\n        this._nativeContainerInfo = nativeContainerInfo\r\n\r\n        const publicProps = this._processProps(this._currentElement.props) //\r\n        const publicContext = this._processContext(context) //\r\n\r\n        const Component = this._currentElement.type\r\n\r\n        let inst\r\n        // 存储render返回的数据\r\n        let renderedElement\r\n\r\n        // 判断是否为继承React.Component类的组件\r\n        if (Component.prototype && Component.prototype.isReactComponent) {\r\n            inst = new Component(publicProps, publicContext, null)\r\n        } else {\r\n            // 默认为function组件\r\n            inst = Component(publicProps, publicContext, null)\r\n\r\n            if (inst === null || inst.render == null) {\r\n                renderedElement = inst\r\n                // 无状态组件\r\n                inst = new StatelessComponent(Component) \r\n            }\r\n\r\n        }\r\n\r\n        inst.props = publicProps\r\n        inst.context = context\r\n        inst.refs = {}\r\n\r\n        this._instance = inst\r\n\r\n        // 存储实例\r\n        ReactInstanceMap.set(inst, this)\r\n\r\n        // State部分\r\n\r\n        // markup\r\n\r\n        let markup \r\n        \r\n        // 执行render\r\n        markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context)\r\n\r\n        // 钩子函数\r\n        if (inst.componentDidMount) {\r\n            \r\n        }\r\n\r\n        return markup\r\n    } \r\n\r\n    performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context) {\r\n        const inst = this._instance\r\n        \r\n        if (inst.componentWillMount) {\r\n\r\n        }\r\n\r\n        if (renderedElement === undefined) {\r\n            renderedElement = this._renderValidatedComponent()\r\n        }\r\n\r\n        this._renderedComponent = this._instantiateReactComponent(\r\n            renderedElement\r\n        )\r\n\r\n        const markup = ReactReconciler.mountComponent(\r\n            this._renderedComponent,\r\n            transaction,\r\n            nativeParent,\r\n            nativeContainerInfo,\r\n            this._processChildContext(context)\r\n        )\r\n\r\n        return markup\r\n    }\r\n\r\n    _renderValidatedComponent() {\r\n        return this._renderValidatedComponentWithoutOwnerOrContext()\r\n    }\r\n\r\n    _renderValidatedComponentWithoutOwnerOrContext() {\r\n        const inst = this._instance;\r\n        const renderedComponent = inst.render()\r\n        return renderedComponent\r\n    }\r\n    /**\r\n     * 后面讲解\r\n     * @param {*} context \r\n     */\r\n    _processChildContext(currentContext) {\r\n        const Component = this._currentElement.type\r\n        const inst = this._instance\r\n        const childContext = inst.getChildContext && inst.getChildContext()\r\n\r\n        if (childContext) {\r\n            return Object.assign({}, currentContext, childContext)\r\n        }\r\n\r\n        return currentContext\r\n    }\r\n\r\n    getPublicInstance() {\r\n        var inst = this._instance\r\n        if (inst instanceof StatelessComponent) {\r\n          return null\r\n        }\r\n        return inst\r\n    }\r\n}","import ReactDOMEmptyComponent from '../react-dom/ReactDOMEmptyComponent'\r\n\r\nconst ReactEmptyComponent = {\r\n    create: function(instantiate) {\r\n        return new ReactDOMEmptyComponent(instantiate)\r\n    }\r\n}\r\n\r\nexport default ReactEmptyComponent","const ReactInstanceMap = {\r\n    get: function(key) {\r\n        return key._reactInternalInstance\r\n    },\r\n    set: function(key, value) {\r\n        key._reactInternalInstance = value;\r\n    }\r\n}\r\n\r\nexport default ReactInstanceMap","const ReactMultiChild = {\r\n    mountChildren: function(nestedChildren, transaction, context) {\r\n        \r\n    },\r\n    _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {\r\n\r\n    }\r\n}\r\n\r\nexport default ReactMultiChild","import ReactDOMComponent from '../react-dom/ReactDOMComponent'\r\nimport ReactDOMTextComponent from '../react-dom/ReactDOMTextComponent'\r\n\r\nfunction createInternalComponent(element) {\r\n    return new ReactDOMComponent(element)\r\n}\r\n\r\nfunction createInstanceForText(node) {\r\n    return new ReactDOMTextComponent(text)\r\n}\r\n\r\nconst ReactNativeComponent = {\r\n    createInternalComponent,\r\n    createInstanceForText\r\n}\r\n\r\nexport default ReactNativeComponent","const ReactReconciler = {\r\n    mountComponent: function (\r\n        internalInstance,\r\n        transaction = { useCreateElement: true },\r\n        nativeParent,\r\n        nativeContainerInfo,\r\n        context\r\n    ) {\r\n        const markup = internalInstance.mountComponent(\r\n            transaction,\r\n            nativeParent,\r\n            nativeContainerInfo,\r\n            context\r\n        ) \r\n        if ( internalInstance._currentElement &&\r\n            internalInstance._currentElement.ref !== null) {\r\n\r\n        }\r\n        return markup\r\n    }\r\n}\r\n\r\nexport default ReactReconciler","import ReactInstanceMap from './ReactInstanceMap'\r\n\r\nexport default class StatelessComponent {\r\n    constructor(Component) {\r\n\r\n    }\r\n\r\n    render() {\r\n        var Component = ReactInstanceMap.get(this)._currentElement.type\r\n        var element = Component(this.props, this.context, this.updater)\r\n        return element\r\n    }\r\n}","import ReactEmptyComponent from './ReactEmptyComponent'\r\nimport ReactNativeComponent from './ReactNativeComponent'\r\nimport ReactCompositeComponent from './ReactCompositeComponent'\r\n\r\nclass ReactCompositeComponentWrapper extends ReactCompositeComponent {\r\n    constructor(element) {\r\n        super(element)\r\n        this._instantiateReactComponent = instantiateReactComponent\r\n    }\r\n}\r\n\r\n// 组件入口\r\n// 判断node类型来区分不同组件\r\nfunction instantiateReactComponent(node) {\r\n    let instance\r\n\r\n    if (node === null) {\r\n        instance = ReactEmptyComponent.create(instantiateReactComponent) // 初始化ReactDOMEmptyComponent 空组件\r\n    } else if (typeof node === 'object') {\r\n        const element = node // 这里我们将节点称为元素\r\n\r\n        if (typeof element.type === 'string') {\r\n            instance = ReactNativeComponent.createInternalComponent(element) // 初始化ReactDOMComponent DOM标签组件\r\n        } else {\r\n            instance = new ReactCompositeComponentWrapper(element) // 初始化ReactCompositeComponent 自定义标签组件 \r\n        }\r\n    } else if (typeof node === 'string' || typeof node === 'number') {\r\n        instance = ReactNativeComponent.createInstanceForText(node) // 初始化ReactDOMTextComponent 文本组件\r\n    } \r\n\r\n    return instance\r\n}\r\n\r\nexport default instantiateReactComponent","const ReactElement = function(type, key, ref, self, props) {\r\n    const element = {\r\n        type: type,\r\n        key: key,\r\n        ref: ref,\r\n        props: props,\r\n    }\r\n    return element\r\n}\r\n\r\nReactElement.createElement = function(type, config, children) {\r\n\r\n    const props = {}\r\n\r\n    let key = null\r\n    let ref = null\r\n    let self = null\r\n\r\n    if (config) {\r\n\r\n    } \r\n\r\n    const childrenLength = arguments.length - 2\r\n    if (childrenLength === 1) {\r\n        props.children = children\r\n    }\r\n    \r\n    return ReactElement(\r\n        type,\r\n        key,\r\n        ref,\r\n        self,\r\n        props,\r\n    )\r\n}\r\n\r\nexport default ReactElement"],"sourceRoot":""}