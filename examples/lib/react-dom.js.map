{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./packages/constants/NodeType.js","webpack:///./packages/constants/index.js","webpack:///./packages/react-dom/src/ReactDOMComponent.js","webpack:///./packages/react-dom/src/ReactDOMContainerInfo.js","webpack:///./packages/react-dom/src/ReactDefaultInjection.js","webpack:///./packages/react-dom/src/ReactInjection.js","webpack:///./packages/react-dom/src/client/ReactDOM.js","webpack:///./packages/react-dom/src/client/ReactMount.js","webpack:///./packages/react-reconciler/src/ReactCompositeComponent.js","webpack:///./packages/react-reconciler/src/ReactInstanceMap.js","webpack:///./packages/react-reconciler/src/ReactNativeComponent.js","webpack:///./packages/react-reconciler/src/ReactReconciler.js","webpack:///./packages/react-reconciler/src/instantiateReactComponent.js","webpack:///./packages/react/src/ReactElement.js","webpack:///./packages/utils/DOMLazyTree.js","webpack:///./packages/utils/setInnerHTML.js","webpack:///./packages/utils/setTextContent.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;;;;;;;;;;;;ACTP;AAAA;AAAA;AAAA;AAAO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO,sB;;;;;;;;;;;;ACVP;AAAA;AAAA,uBAAuB;AAC0B;;AAEjD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,6BAA6B,kEAAW;;AAExC;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,0DAAW;AACrB,SAAS;AACT;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,gF;;;;;;;;;;;;ACjEf;AAAA;AAAwD;;AAExD;AACA;AACA;AACA;AACA,8BAA8B,iEAAa;AAC3C;AACA;AACA;AACA;AACA;;AAEe,oF;;;;;;;;;;;;;;;;;;;;;;;ACbf;AAAA;AAAA;AAAA;AAAA;AAA6C;AACM;AACQ;;AAE3D;AACA;AACA,QAAQ,uDAAc;AACtB,YAAY,0DAAiB;AAC7B;;AAEA,QAAQ,uDAAc;AACtB,YAAY,6DAAqB;AACjC;AACA;AACA;;AAEe,oF;;;;;;;;;;;;AChBf;AAAA;AAAkF;;AAElF;AACA,qBAAqB,kFAAoB;AACzC;;AAEe,6E;;;;;;;;;;;;ACNf;AAAA;AAAA;AAAqC;AACrC,OAAO,SAAS,GAAG,mDAAU;;AAE+B;;AAE5D,8DAAqB;;AAErB;AACA;AACA;;AAEA,0B;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACV;AAC+C;AACnC;AACN;AACF;AACuB;;AAE3E;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6EAAe;AAClC;AACA;AACA,QAAQ,sEAAqB;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,+FAAyB;;AAE3D;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAW;AACvB,SAAS;AACT,YAAY,mEAAY;AACxB;AACA,KAAK;AACL;;AAEA,mCAAmC,uEAAY;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAW;AAC3B;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yE;;;;;;;;;;;;AC9Gf;AAAA;AAAA;AAAiD;AACF;;AAE/C;;AAEA;AACA,sBAAsB,yDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,QAAQ,yDAAgB;;AAExB;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,wDAAe;AACtC;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,sF;;;;;;;;;;;;AChHf;AAAA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,+E;;;;;;;;;;;;ACTf;AAAA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,mF;;;;;;;;;;;;AC1Bf;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,8E;;;;;;;;;;;;ACpBf;AAAA;AAAA;AAAyD;AACM;;AAE/D;AACA;AACA;;AAEA;AACA;AACA,IAAI,gEAAuB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,6DAAoB;AAC3C,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,mBAAmB,6DAAoB;AACvC;;AAEA;AACA;;AAEe,wF;;;;;;;;;;;;AC9Cf;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,K;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2E;;;;;;;;;;;;ACpCf;AAAA;AAAA;AAAA;AAAkE;AACzB;AACI;;AAE7C;AACA,SAAS,qDAAU;AACnB;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,QAAQ,+DAAc;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,8EAA0B;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,QAAQ,+DAAc;AACtB;AACA;;AAEe,0E;;;;;;;;;;;;AChDf;AAAA;AACA;AACA;;AAEe,2E;;;;;;;;;;;;ACJf;AAAA;AACA;AACA;;AAEe,6E","file":"react-dom.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/react-dom/src/client/ReactDOM.js\");\n","export const ELEMENT_NODE_TYPE = 1 // 元素\r\nexport const ATTR_NODE_TYPE = 2 // 属性\r\nexport const TEXT_NODE_TYPE = 3 // 元素或属性中的文本内容\r\nexport const CDATASECTION_NODE_TYPE = 4 // 不会被解释的部分\r\nexport const ENTITYREFERENCE_NODE_TYPE = 5 // 实体引用\r\nexport const ENTITY_NODE_TYPE = 6 // 实体\r\nexport const PROCESSINGINSTRUCTION_NODE_TYPE = 7 // 代表处理指令\r\nexport const COMMENT_NODE_TYPE = 8  // 注释\r\nexport const DOC_NODE_TYPE = 9 // 代表整个文档\r\nexport const DOCUMENTFRAGMENT_NODE_TYPE = 11 // 轻量级的文档处理对象","export const internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2)\n\nexport const canUseLazy = !!(\n    typeof document !== undefined &&\n    typeof document.documentMode === 'number' ||\n    typeof navigator !== 'undefined' &&\n    typeof navigator.userAgent === 'string' &&\n    /\\bEdge\\/\\d/.test(navigator.userAgent)\n)\n\nexport const emptyObject = {}","const CONTENT_TYPES = {'string': true, 'number': true}\nimport DOMLazyTree from '../../utils/DOMLazyTree'\n\nfunction ReactDOMComponent(element) {\n    const tag = element.type\n\n    this._tag = tag.toLowerCase()\n    this._currentElement = element\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent'\n\nReactDOMComponent.Mixin = {\n    mountComponent: function(\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n        this._nativeParent = nativeParent\n        this._nativeContainerInfo = nativeContainerInfo\n\n        const props = this._currentElement.props\n\n        let mountImage\n\n        if (true) {\n            const ownerDocument = nativeContainerInfo._ownerDocument\n\n            const el = ownerDocument.createElement(this._currentElement.type)\n\n            const lazyTree = DOMLazyTree(el);\n            \n            this._createInitialChildren(props, lazyTree);\n      \n            mountImage = lazyTree\n        }\n\n        return mountImage\n    },\n    _createInitialChildren: function(\n        props,\n        lazyTree\n    ) {\n        const contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n        const childrenToUse = contentToUse != null ? null : props.children;\n        if (contentToUse) {\n          // TODO: Validate that text is allowed as a child of this node\n          DOMLazyTree.queueText(lazyTree, contentToUse);\n        } else if (childrenToUse) {\n            // const mountImages = this.mountChildren(childrenToUse, context);\n            // for (var i = 0; i < mountImages.length; i++) {\n            //     DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n            // }\n        }\n    },\n    getPublicInstance: function() {\n        return null;\n    }\n}\n\nObject.assign(\n    ReactDOMComponent.prototype,\n    ReactDOMComponent.Mixin\n)\n\nexport default ReactDOMComponent","import { DOC_NODE_TYPE } from '../../constants/NodeType'\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n    const info = {\n        _topLevelWrapper: topLevelWrapper,\n        _ownerDocument: node ?\n            node.nodeType === DOC_NODE_TYPE ?   \n                node : node.ownerDocument :\n                    null\n    }\n    return info\n}\n\nexport default ReactDOMContainerInfo","import ReactInjection from './ReactInjection'\r\nimport ReactDOMComponent from './ReactDOMComponent'\r\nimport ReactDOMTextComponent from './ReactDOMTextComponent'\r\n\r\nconst ReactDefaultInjection = {\r\n    inject: function() {\r\n        ReactInjection.NativeComponent.injectGenericComponentClass(\r\n            ReactDOMComponent\r\n        )\r\n        \r\n        ReactInjection.NativeComponent.injectTextComponentClass(\r\n            ReactDOMTextComponent\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactDefaultInjection","import ReactNativeComponent from '../../react-reconciler/src/ReactNativeComponent'\r\n\r\nconst ReactInjection = {\r\n    NativeComponent: ReactNativeComponent.injection\r\n}\r\n\r\nexport default ReactInjection","import ReactMount from './ReactMount'\r\nconst { render } = ReactMount\r\n\r\nimport ReactDefaultInjection from '../ReactDefaultInjection'\r\n\r\nReactDefaultInjection.inject()\r\n\r\nconst ReactDOM = {\r\n    render\r\n}\r\n\r\nwindow.ReactDOM = ReactDOM","import ReactElement from '../../../react/src/ReactElement'\r\nimport { emptyObject } from '../../../constants'\r\nimport instantiateReactComponent from '../../../react-reconciler/src/instantiateReactComponent'\r\nimport ReactDOMContainerInfo from '../ReactDOMContainerInfo'\r\nimport setInnerHTML from '../../../utils/setInnerHTML'\r\nimport DOMLazyTree from '../../../utils/DOMLazyTree'\r\nimport ReactReconciler from '../../../react-reconciler/src/ReactReconciler'\r\n\r\nlet topLevelRootCounter = 1\r\n\r\nfunction mountComponentIntoNode(\r\n    wrapperInstance,\r\n    container,\r\n    context\r\n) {\r\n    const markup = ReactReconciler.mountComponent(\r\n        wrapperInstance,\r\n        null,\r\n        ReactDOMContainerInfo(wrapperInstance, container),\r\n        context\r\n    )\r\n\r\n    wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance\r\n\r\n    ReactMount._mountImageIntoNode(\r\n        markup,\r\n        container,\r\n        wrapperInstance\r\n    )\r\n}\r\n\r\nfunction batchedMountComponentIntoNode (\r\n    componentInstance,\r\n    container,\r\n    context\r\n) {\r\n    mountComponentIntoNode(\r\n        componentInstance,\r\n        container,\r\n        context\r\n    )\r\n}\r\n\r\nconst TopLevelWrapper = function() {\r\n    this.rootID = topLevelRootCounter++\r\n};\r\n\r\nTopLevelWrapper.prototype.isReactComponent = {};\r\n\r\nTopLevelWrapper.prototype.render = function() {\r\n  // this.props is actually a ReactElement\r\n  return this.props;\r\n}\r\n\r\nconst ReactMount = {\r\n    _renderNewRootComponent: function(nextElement, container, context) {\r\n        const componentInstance = instantiateReactComponent(nextElement)\r\n\r\n        batchedMountComponentIntoNode(componentInstance, container, context)\r\n\r\n        return componentInstance\r\n    },\r\n    _mountImageIntoNode: function(\r\n        markup,\r\n        container,\r\n        wrapperInstance,\r\n        transaction = { useCreateElement : true}\r\n    ){\r\n        if (transaction.useCreateElement) {\r\n            while (container.lastChild) {\r\n                container.removeChild(container.lastChild)\r\n            }\r\n            DOMLazyTree.insertTreeBefore(container, markup, null)\r\n        } else {\r\n            setInnerHTML(container, markup)\r\n        }\r\n    },\r\n    _renderSubtreeIntoContainer: function(parentComponent, nextElement, container, callback) {\r\n\r\n        const nextWrappedElement = ReactElement(\r\n            TopLevelWrapper,\r\n            null,\r\n            null,\r\n            nextElement\r\n        )\r\n\r\n        const component = ReactMount._renderNewRootComponent(\r\n            nextWrappedElement,\r\n            container,\r\n            parentComponent ? parentComponent._reactInternalInstance._processChildContext(\r\n                parentComponent._reactInternalInstance._context\r\n            ) : emptyObject // {}\r\n        )._renderedComponent.getPublicInstance()\r\n\r\n        if (callback) {\r\n\r\n        }\r\n\r\n        return component\r\n    },\r\n    render: function(nextElement, container, callback) {\r\n        return ReactMount._renderSubtreeIntoContainer(\r\n            null,\r\n            nextElement,\r\n            container,\r\n            callback,\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactMount","import ReactInstanceMap from './ReactInstanceMap'\nimport ReactReconciler from './ReactReconciler'\n\nfunction StatelessComponent(Component) {}\n\nStatelessComponent.prototype.render = function() {\n    const Component = ReactInstanceMap.get(this)._currentElement.type\n    const element = Component(this.props)\n    return element\n}\n\nconst ReactCompositeComponentMixin = {\n    construct: function(element) {\n        this._currentElement = element\n        this._renderedComponent = null\n    },\n    mountComponent: function(\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n        this._nativeParent = nativeParent\n        this._nativeContainerInfo = nativeContainerInfo\n        \n        const publicProps = this._processProps(this._currentElement.props)\n\n        const Component = this._currentElement.type\n\n        let inst\n        let renderedElement\n\n        if (Component.prototype && Component.prototype.isReactComponent) {\n            inst = new Component(publicProps)\n        } else {\n            inst = Component(publicProps)\n        }\n\n        if (inst == null || inst.render == null) {\n            renderedElement = inst\n            inst = new StatelessComponent(Component)\n        }\n\n        inst.props = publicProps\n\n        this._instance = inst\n\n        ReactInstanceMap.set(inst, this)\n\n        let markup\n\n        if (inst.unstable_handleError) {\n\n        } else {\n            markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo)\n        }\n\n        if (inst.componentDidMount) {\n\n        }\n\n        return markup\n    },\n    _processProps: function(newProps) {\n        return newProps\n    },\n    performInitialMount: function(\n        renderedElement,\n        nativeParent, \n        nativeContainerInfo\n    ) {\n        const inst = this._instance\n    \n        if (inst.componentWillMount) {\n            inst.componentWillMount()\n        }\n        // If not a stateless component, we now render\n        if (renderedElement === undefined) {\n            renderedElement = this._renderValidatedComponent()\n        }\n    \n        this._renderedComponent = this._instantiateReactComponent(renderedElement)\n    \n        const markup = ReactReconciler.mountComponent(\n            this._renderedComponent,\n            nativeParent,\n            nativeContainerInfo\n        )\n      \n        return markup\n    },\n    _instantiateReactComponent: null,\n    _renderValidatedComponent: function() {\n        let renderedComponent\n    \n        try {\n            renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext()\n        } finally {\n            return renderedComponent\n        }\n    },\n    _renderValidatedComponentWithoutOwnerOrContext: function() {\n        const inst = this._instance;\n        const renderedComponent = inst.render()\n    \n        return renderedComponent\n    }\n}\n\nconst ReactCompositeComponent = {\n    Mixin: ReactCompositeComponentMixin\n}\n\nexport default ReactCompositeComponent","const ReactInstanceMap = {\n    get: function(key) {\n        return key._reactInternalInstance\n    },\n    set: function(key, value) {\n        key._reactInternalInstance = value;\n    }\n}\n\nexport default ReactInstanceMap","let genericComponentClass = null\r\nlet textComponentClass = null\r\n\r\nconst ReactHostComponentInjection = {\r\n    injectGenericComponentClass: function(componentClass) {\r\n        genericComponentClass = componentClass;\r\n    },\r\n    injectTextComponentClass: function(componentClass) {\r\n        textComponentClass = componentClass;\r\n    }\r\n}\r\n\r\nfunction createInternalComponent(element) {\r\n    return new genericComponentClass(element)\r\n}\r\n\r\nfunction createInstanceForText(node) {\r\n    return new textComponentClass(text)\r\n}\r\n\r\nconst ReactNativeComponent = {\r\n    createInternalComponent,\r\n    createInstanceForText,\r\n    injection: ReactHostComponentInjection\r\n}\r\n\r\nexport default ReactNativeComponent","const ReactReconciler = {\n    mountComponent: function (\n        internalInstance,\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n        const markup = internalInstance.mountComponent(\n            nativeParent,\n            nativeContainerInfo,\n            context\n        ) \n        if ( internalInstance._currentElement &&\n            internalInstance._currentElement.ref !== null) {\n\n        }\n        return markup\n    }\n}\n\nexport default ReactReconciler","import ReactNativeComponent from './ReactNativeComponent'\r\nimport ReactCompositeComponent from './ReactCompositeComponent'\r\n\r\nconst ReactCompositeComponentWrapper = function(element) {\r\n    this.construct(element);\r\n}\r\n\r\nObject.assign(\r\n    ReactCompositeComponentWrapper.prototype,\r\n    ReactCompositeComponent.Mixin,\r\n    {\r\n      _instantiateReactComponent: instantiateReactComponent,\r\n    }\r\n)\r\n\r\nfunction isInternalComponentType(type) {\r\n    return (\r\n        typeof type === 'function' &&\r\n        typeof type.prototype !== 'undefined' &&\r\n        typeof type.prototype.mountComponent === 'function' &&\r\n        typeof type.prototype.receiveComponent === 'function'\r\n      )\r\n}\r\n\r\nfunction instantiateReactComponent(node) {\r\n    let instance \r\n\r\n    if (node === null || node === false) {\r\n\r\n    } else if (typeof node === 'object') {\r\n        const type = node.type\r\n        const element = node\r\n        if (typeof type === 'string') {\r\n            instance = ReactNativeComponent.createInternalComponent(element)\r\n        } else if (isInternalComponentType(type)) {\r\n            instance = new type(element)\r\n        } else {\r\n            instance = new ReactCompositeComponentWrapper(element)\r\n        }\r\n    } else if (typeof node === 'string' || typeof node === 'number') {\r\n        instance = ReactNativeComponent.createInstanceForText(node)\r\n    }\r\n\r\n    return instance\r\n}\r\n\r\nexport default instantiateReactComponent","const ReactElement = function(type, key, ref, props) {\n    const element = {\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n    }\n\n    return element\n}\n\nReactElement.createElement = function(type, config, children) {\n\n    const props = {}\n\n    let key = null\n    let ref = null\n    \n    if (config) {\n\n    } \n\n    const childrenLength = arguments.length - 2\n\n    if (childrenLength.length === 1) {\n        props.children = children\n    }\n    \n    return ReactElement(\n        type,\n        key,\n        ref,\n        props,\n    )\n}\n\nexport default ReactElement","import { DOCUMENTFRAGMENT_NODE_TYPE } from '../constants/NodeType'\nimport { canUseLazy } from '../constants'\nimport setTextContent from './setTextContent'\n\nfunction insertTreeChildren(tree) {\n    if (!canUseLazy) {\n        return \n    }\n    const node = tree.node\n    const children = tree.children\n    if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n            insertTreeBefore(node, children[i], null);\n        }\n    } else if (tree.html !== null) {\n        node.innerHTML = tree.html\n    } else if (tree.text !== null) {\n        setTextContent(node, tree.text)\n    }\n}\n\nfunction DOMLazyTree(node) {\n    return {\n      node: node,\n      children: [],\n      html: null,\n      text: null,\n    }\n}\n\nDOMLazyTree.insertTreeBefore = function(parentNode, tree, referenceNode) {\n    if (tree.node.nodeType === DOCUMENTFRAGMENT_NODE_TYPE) {\n        insertTreeChildren(tree)\n        parentNode.insertBefore(tree.node, referenceNode)\n    } else {\n        parentNode.insertBefore(tree.node, referenceNode)\n        insertTreeChildren(tree)\n    }\n}\n\nDOMLazyTree.queueText = function(tree, text) {\n    if (enableLazy) {\n        tree.text = text;\n    } else {\n        setTextContent(tree.node, text);\n    }\n}\n\nexport default DOMLazyTree","const setInnerHTML = function(node, html) {\n    node.innerHTML = html\n}\n\nexport default setInnerHTML","const setTextContent = function(node, text) {\n    node.textContent = text\n}\n\nexport default setTextContent"],"sourceRoot":""}