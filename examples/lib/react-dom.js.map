{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./version-one/constants/index.js","webpack:///./version-one/constants/nodeTypes.js","webpack:///./version-one/react-dom/DOMNamespaces.js","webpack:///./version-one/react-dom/DOMProperty.js","webpack:///./version-one/react-dom/DOMPropertyOperations.js","webpack:///./version-one/react-dom/ReactDOMComponent.js","webpack:///./version-one/react-dom/ReactDOMContainerInfo.js","webpack:///./version-one/react-dom/ReactDOMEmptyComponent.js","webpack:///./version-one/react-dom/ReactDOMTextComponent.js","webpack:///./version-one/react-dom/TopLevelWrapper.js","webpack:///./version-one/react-dom/client/ReactDOM.js","webpack:///./version-one/react-dom/client/ReactDOMComponentTree.js","webpack:///./version-one/react-dom/client/ReactMount.js","webpack:///./version-one/react-dom/client/utils/DOMLazyTree.js","webpack:///./version-one/react-dom/client/utils/setTextContent.js","webpack:///./version-one/react-reconciler/ReactCompositeComponent.js","webpack:///./version-one/react-reconciler/ReactEmptyComponent.js","webpack:///./version-one/react-reconciler/ReactInstanceMap.js","webpack:///./version-one/react-reconciler/ReactMultiChild.js","webpack:///./version-one/react-reconciler/ReactNativeComponent.js","webpack:///./version-one/react-reconciler/ReactReconciler.js","webpack:///./version-one/react-reconciler/StatelessComponent.js","webpack:///./version-one/react-reconciler/instantiateReactComponent.js","webpack:///./version-one/react/ReactElement.js"],"names":[],"mappings":"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A;;AAEA,+BAA+B,mEAAY;AAC3C,QAAQ,wDAAe;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAW;AACvB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,8BAA8B,2FAAyB;;AAEvD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yEAAe;AAClC;AACA,SAAS,wBAAwB;AACjC;AACA,QAAQ,sEAAqB;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,QAAQ,0DAAW;AACnB,KAAK;AACL;AACA;AACA,C;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAA+C;AAC0B;AAC5B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,qDAAU;AAChB;AACA,GAAG;AACH,IAAI,+DAAc;AAClB;AACA;;AAEA;AACA,6BAA6B,+EAA0B;AACvD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,OAAO,qDAAU;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,MAAM,+DAAc;AACpB;AACA;;AAEA;AACA,MAAM,qDAAU;AAChB;AACA,GAAG;AACH;AACA;AACA;;AAEe,0E;;;;;;;;;;;;ACxDf;AAAA;AACA;AACA;;AAEe,6E;;;;;;;;;;;;ACJf;AAAA;AAAA;AAAA;AAAA;AAAqD;AACJ;AACF;;AAEhC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,2DAAkB;AAC7C;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,yDAAgB;;AAExB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,K;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,wDAAe;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,2DAAkB;AAC9C;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACxKA;AAAA;AAAwE;;AAExE;AACA;AACA,mBAAmB,yEAAsB;AACzC;AACA;;AAEe,kF;;;;;;;;;;;;ACRf;AAAA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEe,+E;;;;;;;;;;;;ACTf;AAAA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;AAEe,8E;;;;;;;;;;;;ACTf;AAAA;AAAA;AAAA;AAA8D;AACQ;;AAEtE;AACA,eAAe,oEAAiB;AAChC;;AAEA;AACA,eAAe,uEAAqB;AACpC;;AAEA;AACA;AACA;AACA;;AAEe,mF;;;;;;;;;;;;AChBf;AAAA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,8E;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAiD;;AAElC;AACf;;AAEA;;AAEA;AACA,wBAAwB,yDAAgB;AACxC;AACA;AACA;AACA,C;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAuD;AACE;AACM;;AAE/D,6CAA6C,gEAAuB;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4DAAmB;AACtC,KAAK;AACL;;AAEA;AACA,uBAAuB,6DAAoB;AAC3C,SAAS;AACT;AACA;AACA,KAAK;AACL,mBAAmB,6DAAoB;AACvC,K;;AAEA;AACA;;AAEe,wF;;;;;;;;;;;;ACjCf;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,K;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2E","file":"react-dom.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./version-one/react-dom/client/ReactDOM.js\");\n","export const enableLazy = !!(\n    typeof document !== undefined &&\n    typeof document.documentMode === 'number' ||\n    typeof navigator !== 'undefined' &&\n    typeof navigator.userAgent === 'string' &&\n    /\\bEdge\\/\\d/.test(navigator.userAgent)\n)\n\nexport const emptyObject = {}","export const ELEMENT_NODE_TYPE = 1 // 元素\nexport const ATTR_NODE_TYPE = 2 // 属性\nexport const TEXT_NODE_TYPE = 3 // 元素或属性中的文本内容\nexport const CDATASECTION_NODE_TYPE = 4 // 不会被解释的部分\nexport const ENTITYREFERENCE_NODE_TYPE = 5 // 实体引用\nexport const ENTITY_NODE_TYPE = 6 // 实体\nexport const PROCESSINGINSTRUCTION_NODE_TYPE = 7 // 代表处理指令\nexport const COMMENT_NODE_TYPE = 8  // 注释\nexport const DOC_NODE_TYPE = 9 // 代表整个文档\nexport const DOCUMENTFRAGMENT_NODE_TYPE = 11 // 轻量级的文档处理对象","const DOMNamespaces = {\n    html: 'http://www.w3.org/1999/xhtml',\n    mathml: 'http://www.w3.org/1998/Math/MathML',\n    svg: 'http://www.w3.org/2000/svg',\n}\n\nexport default DOMNamespaces","const DOMProperty = {\n    ROOT_ATTRIBUTE_NAME: 'data-reactroot'\n}\n\nexport default DOMProperty","import DOMProperty from './DOMProperty'\n\nconst DOMPropertyOperations = {\n    setAttributeForRoot: function(node) {\n        node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '')\n    }\n}\n\nexport default DOMPropertyOperations","import ReactMultiChild from '../react-reconciler/ReactMultiChild'\nimport DOMNamespaces from './DOMNamespaces'\nimport DOMPropertyOperations from './DOMPropertyOperations'\nimport DOMLazyTree from './client/utils/DOMLazyTree'\n\nimport { getNodeFromInstance } from './client/ReactDOMComponentTree'\n\nconst CONTENT_TYPES = {'string': true, 'number': true}\n\nclass ReactDOMComponent {\n    constructor(element) {\n        const tag = element.type\n        // for diff\n        this._domID = null\n\n        this._currentElement = element\n        this._tag = tag.toLowerCase()\n        this._namespaceURI = null\n    }\n\n    mountComponent(\n        transaction = { useCreateElement: true},\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n        this._domID = nativeContainerInfo._idCounter++\n        this._nativeParent = nativeParent\n        this._nativeContainerInfo = nativeContainerInfo\n\n        const props = this._currentElement.props\n\n        // namespace 还没去研究干啥的\n        let namespaceURI\n        let parentTag\n\n        if (nativeParent) {\n            namespaceURI = nativeParent._namespaceURI\n            parentTag = nativeParent._tag\n        } else if (nativeContainerInfo._tag) {\n            namespaceURI = nativeContainerInfo._namespaceURI\n            parentTag = nativeContainerInfo._tag\n        }\n\n        if (namespaceURI == null ||\n            namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n                namespaceURI = DOMNamespaces.html\n        }\n\n        if (namespaceURI === DOMNamespaces.html) {\n            if (this._tag === 'svg') {\n              namespaceURI = DOMNamespaces.svg;\n            } else if (this._tag === 'math') {\n              namespaceURI = DOMNamespaces.mathml;\n            }\n        }\n\n        this._namespaceURI = namespaceURI\n\n        let mountImage\n\n        // 创建\n        if (transaction && transaction.useCreateElement || true) {\n            const ownerDocument = nativeContainerInfo._ownerDocument\n            let el \n\n            if (namespaceURI === DOMNamespaces.html) {\n                if (this._tag === 'script') {\n                \n                } else {\n                    el = ownerDocument.createElement(this._currentElement.type)\n                } \n            } else {\n                el = ownerDocument.createElementNS(\n                    namespaceURI,\n                    this._currentElement.type\n                )\n            }\n\n            if (!this._nativeParent) {\n                DOMPropertyOperations.setAttributeForRoot(el);\n            }\n\n            this._updateDOMProperties(null, props, transaction)\n\n            const lazyTree = DOMLazyTree(el)\n\n            this._createInitialChildren(transaction, props, context, lazyTree)\n\n            mountImage = lazyTree\n        } else { // 更新\n\n        }\n\n        return mountImage\n    }\n\n    _updateDOMProperties(lastProps, nextProps, transaction) {\n        //\n    }\n\n    _createInitialChildren(transaction, props, context, lazyTree) {\n        const innerHTML = props.dangerouslySetInnerHTML\n\n        if (innerHTML) {\n\n        } else {\n            const contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null\n            const childrenToUse = contentToUse != null ? null : props.children\n\n            if (contentToUse != null) {\n                // 将文本绑定到节点上去\n                DOMLazyTree.queueText(lazyTree, contentToUse);\n              } else if (childrenToUse != null) {\n                // 还不知道干啥\n                const mountImages = this.mountChildren(\n                  childrenToUse,\n                  transaction,\n                  context\n                )\n                for (var i = 0; i < mountImages.length; i++) {\n                  DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n                }\n              }\n        }\n    }\n\n    getPublicInstance() {\n        return getNodeFromInstance(this)\n    }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent'\n\nObject.assign(\n    ReactDOMComponent.prototype,\n    ReactMultiChild\n)\n\nexport default ReactDOMComponent","import { DOC_NODE_TYPE } from '../constants/nodeTypes'\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n    const info = {\n        _topLevelWrapper: topLevelWrapper,\n        _ownerDocument: node ?\n            node.nodeType === DOC_NODE_TYPE ?   \n                node : node.ownerDocument :\n                    null\n    }\n    return info\n}\n\nexport default ReactDOMContainerInfo","export default class ReactDOMEmptyComponent {\n    constructor(instantiate) {\n        // ReactCompositeComponent uses this:\n        this._currentElement = null\n        // ReactDOMComponentTree uses these:\n        this._nativeNode = null\n        this._nativeParent = null\n        this._nativeContainerInfo = null\n        this._domID = null\n    }\n\n    mountComponent(\n        transaction,\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n\n    }\n\n    receiveComponent() {\n        \n    }\n}","\nclass ReactDOMTextComponent {\n    constructor(text) {\n        this._currentElement = text\n\n        this._nativeNode = null\n        this._nativeParent = null\n\n        this._domID = null\n    }\n\n    mountComponent(\n        transaction,\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n\n    }\n\n    receiveComponent(nextText, transaction) {\n    \n    }\n}","let topLevelRootCounter = 1\n\nconst TopLevelWrapper = function() {\n    this.rootID = topLevelRootCounter++\n}\n\nTopLevelWrapper.prototype.isReactComponent = {}\n\nTopLevelWrapper.prototype.render = function() {\n    console.log(this)\n    return this.props\n}\n\nexport default TopLevelWrapper","import { render } from './ReactMount'\n\nconst ReactDOM = {\n    render\n}\n\nwindow.ReactDOM = ReactDOM","\nexport const getNodeFromInstance = (inst) => {\n    if (inst._nativeNode) {\n        return inst._nativeNode\n    }\n\n    let parents = []\n\n    while (!inst._nativeNode) {\n        parents.push(inst)\n\n        inst = inst._nativeParent\n    }\n\n    return inst._nativeNode\n}","import ReactElement from '../../react/ReactElement'\nimport TopLevelWrapper from '../TopLevelWrapper'\nimport { emptyObject } from '../../constants'\nimport instantiateReactComponent from '../../react-reconciler/instantiateReactComponent'\nimport ReactReconciler from '../../react-reconciler/ReactReconciler'\nimport ReactDOMContainerInfo from '../ReactDOMContainerInfo'\nimport DOMLazyTree from './utils/DOMLazyTree'\n\nexport const render = function(nextElement, container, callback) {\n    return renderSubtreeIntoContainer(\n        null,\n        nextElement,\n        container,\n        callback,\n    )\n}\n\nconst renderSubtreeIntoContainer = function(parentComponent, nextElement, container, callback) {\n\n    const nextWrappedElement = ReactElement(\n        TopLevelWrapper,\n        null,\n        null,\n        null,\n        nextElement\n    )\n\n    const component = renderNewRootComponent(\n        nextWrappedElement,\n        container,\n        parentComponent ? parentComponent._reactInternalInstance._processChildContext(\n            parentComponent._reactInternalInstance._context\n        ) : emptyObject \n    )._renderedComponent.getPublicInstance()\n\n    if (callback) {\n\n    }\n\n    return component\n}\n\nconst renderNewRootComponent = function(nextElement, container, context) {\n    const componentInstance = instantiateReactComponent(nextElement)\n\n    mountComponentIntoNode(componentInstance, container, context)\n\n    return componentInstance\n}\n\nconst mountComponentIntoNode = function(\n    wrapperInstance,\n    container,\n    context\n) {\n    const markup = ReactReconciler.mountComponent(\n        wrapperInstance,\n        { useCreateElement: true},\n        null,\n        ReactDOMContainerInfo(wrapperInstance, container),\n        context\n    )\n\n    wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance\n\n    mountImageIntoNode(\n        markup,\n        container,\n        wrapperInstance\n    )\n}\n\nconst mountImageIntoNode = function(\n    markup,\n    container,\n    wrapperInstance,\n    transaction = { useCreateElement : true}\n){\n    if (transaction.useCreateElement) {\n        while (container.lastChild) {\n            container.removeChild(container.lastChild)\n        }\n        DOMLazyTree.insertTreeBefore(container, markup, null)\n    } else {\n        setInnerHTML(container, markup)\n    }\n}","import { enableLazy } from '../../../constants'\nimport { DOCUMENTFRAGMENT_NODE_TYPE } from '../../../constants/nodeTypes'\nimport setTextContent from './setTextContent'\n\nfunction DOMLazyTree(node) {\n    return {\n      node: node,\n      children: [],\n      html: null,\n      text: null,\n    }\n}\n\nDOMLazyTree.queueText = function(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nDOMLazyTree.insertTreeBefore = function(parentNode, tree, referenceNode) {\n  if (tree.node.nodeType === DOCUMENTFRAGMENT_NODE_TYPE) {\n      insertTreeChildren(tree)\n      parentNode.insertBefore(tree.node, referenceNode)\n  } else {\n      parentNode.insertBefore(tree.node, referenceNode)\n      insertTreeChildren(tree)\n  }\n}\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n      return \n  }\n  const node = tree.node\n  const children = tree.children\n  if (children.length) {\n      for (var i = 0; i < children.length; i++) {\n        DOMLazyTree.insertTreeBefore(node, children[i], null);\n      }\n  } else if (tree.html !== null) {\n      node.innerHTML = tree.html\n  } else if (tree.text !== null) {\n      setTextContent(node, tree.text)\n  }\n}\n\nDOMLazyTree.queueChild = function(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nexport default DOMLazyTree","const setTextContent = function(node, text) {\n    node.textContent = text\n}\n\nexport default setTextContent","import StatelessComponent from './StatelessComponent'\nimport ReactInstanceMap from './ReactInstanceMap'\nimport ReactReconciler from './ReactReconciler'\n\nexport default class ReactCompositeComponent {\n    constructor(element) {\n        this._currentElement = element\n        // for diff\n        this._rootNodeID = null\n        this._instance = null\n        // for update\n        this._renderedComponent = null\n        this._context = null\n        // for dom tree\n        this._nativeParent = null;\n        this._nativeContainerInfo = null\n    }\n\n    _processProps(newProps) {\n        return newProps\n    }\n\n    _processContext(context) {\n        return this._maskContext(context)\n    }\n    /**\n     * 绑定上下文\n     * @param {上下文} context \n     */\n    _maskContext(context) {\n        const Component = this._currentElement.type\n        const contextTypes = Component.contextTypes\n        if (contextTypes) {\n            const maskedContext = {}\n\n            for (let contextName in contextTypes) {\n                maskedContext[contextName] = context[contextName]\n            }\n\n            return maskedContext\n        }\n        return {}\n    }\n    /**\n     * 绑定组件\n     * @param {*} transaction \n     * @param {*} nativeParent \n     * @param {*} nativeContainerInfo \n     * @param {*} context \n     */\n    mountComponent(\n        transaction,\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n        this.context = context\n        this._nativeParent = nativeParent\n        this._nativeContainerInfo = nativeContainerInfo\n\n        const publicProps = this._processProps(this._currentElement.props) //\n        const publicContext = this._processContext(context) //\n\n        const Component = this._currentElement.type\n\n        let inst\n        // 存储render返回的数据\n        let renderedElement\n\n        // 判断是否为继承React.Component类的组件\n        if (Component.prototype && Component.prototype.isReactComponent) {\n            inst = new Component(publicProps, publicContext, null)\n        } else {\n            // 默认为function组件\n            inst = Component(publicProps, publicContext, null)\n\n            if (inst === null || inst.render == null) {\n                renderedElement = inst\n                // 无状态组件\n                inst = new StatelessComponent(Component) \n            }\n\n        }\n\n        inst.props = publicProps\n        inst.context = context\n        inst.refs = {}\n\n        this._instance = inst\n\n        // 存储实例\n        ReactInstanceMap.set(inst, this)\n\n        // State部分\n\n        // markup\n\n        let markup \n        \n        // 执行render\n        markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context)\n\n        // 钩子函数\n        if (inst.componentDidMount) {\n            \n        }\n\n        return markup\n    } \n\n    performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context) {\n        const inst = this._instance\n        \n        if (inst.componentWillMount) {\n\n        }\n\n        if (renderedElement === undefined) {\n            renderedElement = this._renderValidatedComponent()\n        }\n\n        this._renderedComponent = this._instantiateReactComponent(\n            renderedElement\n        )\n\n        const markup = ReactReconciler.mountComponent(\n            this._renderedComponent,\n            transaction,\n            nativeParent,\n            nativeContainerInfo,\n            this._processChildContext(context)\n        )\n\n        return markup\n    }\n\n    _renderValidatedComponent() {\n        return this._renderValidatedComponentWithoutOwnerOrContext()\n    }\n\n    _renderValidatedComponentWithoutOwnerOrContext() {\n        const inst = this._instance;\n        const renderedComponent = inst.render()\n        return renderedComponent\n    }\n    /**\n     * 后面讲解\n     * @param {*} context \n     */\n    _processChildContext(currentContext) {\n        const Component = this._currentElement.type\n        const inst = this._instance\n        const childContext = inst.getChildContext && inst.getChildContext()\n\n        if (childContext) {\n            return Object.assign({}, currentContext, childContext)\n        }\n\n        return currentContext\n    }\n\n    getPublicInstance() {\n        var inst = this._instance\n        if (inst instanceof StatelessComponent) {\n          return null\n        }\n        return inst\n    }\n}","import ReactDOMEmptyComponent from '../react-dom/ReactDOMEmptyComponent'\n\nconst ReactEmptyComponent = {\n    create: function(instantiate) {\n        return new ReactDOMEmptyComponent(instantiate)\n    }\n}\n\nexport default ReactEmptyComponent","const ReactInstanceMap = {\n    get: function(key) {\n        return key._reactInternalInstance\n    },\n    set: function(key, value) {\n        key._reactInternalInstance = value;\n    }\n}\n\nexport default ReactInstanceMap","const ReactMultiChild = {\n    mountChildren: function(nestedChildren, transaction, context) {\n        \n    },\n    _reconcilerInstantiateChildren: function(nestedChildren, transaction, context) {\n\n    }\n}\n\nexport default ReactMultiChild","import ReactDOMComponent from '../react-dom/ReactDOMComponent'\nimport ReactDOMTextComponent from '../react-dom/ReactDOMTextComponent'\n\nfunction createInternalComponent(element) {\n    return new ReactDOMComponent(element)\n}\n\nfunction createInstanceForText(node) {\n    return new ReactDOMTextComponent(text)\n}\n\nconst ReactNativeComponent = {\n    createInternalComponent,\n    createInstanceForText\n}\n\nexport default ReactNativeComponent","const ReactReconciler = {\n    mountComponent: function (\n        internalInstance,\n        transaction = { useCreateElement: true },\n        nativeParent,\n        nativeContainerInfo,\n        context\n    ) {\n        const markup = internalInstance.mountComponent(\n            transaction,\n            nativeParent,\n            nativeContainerInfo,\n            context\n        ) \n        if ( internalInstance._currentElement &&\n            internalInstance._currentElement.ref !== null) {\n\n        }\n        return markup\n    }\n}\n\nexport default ReactReconciler","import ReactInstanceMap from './ReactInstanceMap'\n\nexport default class StatelessComponent {\n    constructor(Component) {\n\n    }\n\n    render() {\n        var Component = ReactInstanceMap.get(this)._currentElement.type\n        var element = Component(this.props, this.context, this.updater)\n        return element\n    }\n}","import ReactEmptyComponent from './ReactEmptyComponent'\nimport ReactNativeComponent from './ReactNativeComponent'\nimport ReactCompositeComponent from './ReactCompositeComponent'\n\nclass ReactCompositeComponentWrapper extends ReactCompositeComponent {\n    constructor(element) {\n        super(element)\n        this._instantiateReactComponent = instantiateReactComponent\n    }\n}\n\n// 组件入口\n// 判断node类型来区分不同组件\nfunction instantiateReactComponent(node) {\n    let instance\n\n    if (node === null) {\n        instance = ReactEmptyComponent.create(instantiateReactComponent) // 初始化ReactDOMEmptyComponent 空组件\n    } else if (typeof node === 'object') {\n        const element = node // 这里我们将节点称为元素\n\n        if (typeof element.type === 'string') {\n            instance = ReactNativeComponent.createInternalComponent(element) // 初始化ReactDOMComponent DOM标签组件\n        } else {\n            instance = new ReactCompositeComponentWrapper(element) // 初始化ReactCompositeComponent 自定义标签组件 \n        }\n    } else if (typeof node === 'string' || typeof node === 'number') {\n        instance = ReactNativeComponent.createInstanceForText(node) // 初始化ReactDOMTextComponent 文本组件\n    } \n\n    return instance\n}\n\nexport default instantiateReactComponent","const ReactElement = function(type, key, ref, self, props) {\n    const element = {\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n    }\n\n    return element\n}\n\nReactElement.createElement = function(type, config, children) {\n\n    const props = {}\n\n    let key = null\n    let ref = null\n    let self = null\n\n    if (config) {\n\n    } \n\n    const childrenLength = arguments.length - 2\n\n    if (childrenLength.length === 1) {\n        props.children = children\n    }\n    \n    return ReactElement(\n        type,\n        key,\n        ref,\n        self,\n        props,\n    )\n}\n\nexport default ReactElement"],"sourceRoot":""}